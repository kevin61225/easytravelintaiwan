@model List<EasyTravelInTaiwan.Models.view>

@{
    ViewBag.Title = "路線規劃 - Easy Travel In Taiwan";
}

<style>
    .tab-content {
        border-left: 1px solid #ddd;
        border-right: 1px solid #ddd;
        border-bottom: 1px solid #ddd;
        border-top: 1px solid #ddd;
        height: 541px;
        padding: 10px;
    }

    .nav-tabs {
        font-family: "微軟正黑體";
        font-weight: bold;
        margin-bottom: 0;
    }

    .nav {
        border-bottom: none;
    }

    #map_canvas {
        height: 500px;
        width: 100%;
    }

    div.growlUI h1, div.growlUI h2 {
        color: white;
        font-family: "微軟正黑體";
        font-size: 32px;
        font-weight: bold;
        /*padding: 5px 5px 5px 75px;*/
        padding: 5px 5px 5px 5px;
        text-align: center;
    }

    .box {
        height: 500px;
    }
</style>

<!--引入 Google API-->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
<script src="https://maps.googleapis.com/maps/api/js?v=3.9&sensor=false"></script>
<script src="~/scripts/jquery-sortable.js"></script>
<script src="~/scripts/Directions.js"></script>

@*<div class="hidden" id="Waypoints">
    <ul>
        @foreach (EasyTravelInTaiwan.Models.view maplatlng in Model)
        {
            <li id="place.@maplatlng.Id">
                <a href="#">@maplatlng.Name<i class="icon-remove pull-right"></i></a>
            </li>
        }
    </ul>
</div>*@
@Html.Hidden("WaypointId", (string)Session["Pt"])

<div class="row">
    <div class="row" style="float: left; width: 70%;">
        <div id="map_canvas" class="map_canvas"></div>
        <br />
        <div id="SortHistory">
            @Html.Action("SortedHistory", "Map")
        </div>
    </div>
    <div style="float: right; width: 27%;">
        <ul id="DirectionInfo" class="nav nav-tabs">
            <li class="active"><a href="#DragTab" data-toggle="tab">路徑選擇</a></li>
            <li><a href="#InfoTab" data-toggle="tab">路徑資訊</a></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="DragTab">
                <div id="SortPlace" class="box">
                    @Html.Action("SortPlace", "Map", new { tid = ViewBag.WaypointId, sid = ViewBag.SId })
                </div>
            </div>
            <div class="tab-pane box" id="InfoTab">
                <div id="directionsPanel"></div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var mainIcon = {
        url: '/Content/Icons/04.png',
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 38)
    };

    var foodIcon = {
        url: '/Content/Icons/02.png',
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 38)
    };

    var hotelIcon = {
        url: '/Content/Icons/01.png',
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 38)
    };

    var hotelIcon11 = {
        url: '/Content/Icons/hotel11.png',
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 38)
    }

    var hotelIcon12 = {
        url: '/Content/Icons/hotel12.png',
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 38)
    }

    var hotelIcon13 = {
        url: '/Content/Icons/hotel13.png',
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 38)
    }

    var hotelIcon14 = {
        url: '/Content/Icons/hotel14.png',
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 38)
    }

    var viewIcon = {
        url: '/Content/Icons/03.png',
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 38)
    };

    var $waypointId;
    var directionsService; //= new google.maps.DirectionsService();
    var map;
    var start = "";
    var end = "";
    var waypts = [];
    var wayppts = [];
    var gmarkers = [];
    var SortedNumber = "";
    var infowindow = new google.maps.InfoWindow();
    var directionsDisplay;

    //初始化
    function initialize() {
        $waypointId = $("#WaypointId").attr("value");
        Reset();
        StartAjax();
        $.ajax({
            url: "@Url.Action("GetDirection")",
            type: "POST",
            data: JSON.stringify({ tid: $waypointId }), //if you need to post Model data, use this
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                var startPoint = new google.maps.LatLng(result[0].Lat, result[0].Lng);
                var myOptions = {
                    zoom: 14,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    center: startPoint
                }
                map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

                $.each(result, function (i, item) {
                    setupLocationMarker(item);
                });

                for (var i = 0; i < result.length; i++) {
                    waypts.push({
                        location: result[i].Address,
                        Name: result[i].Name,
                        stopover: true
                    });
                }

                //規畫路徑呈現選項
                var rendererOptions = {
                    suppressMarkers: true,
                    draggable: true
                };

                directionsDisplay = new DirectionsDisplay(map, document.getElementById("directionsPanel"));
                directionsService = new DirectionsRoute(directionsDisplay);
                //directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
                //directionsDisplay.setMap(map);

                // SortList Item can be clicked
                InitialItemClick();

                // 根據 SortList 做排序
                SortWaypoint()
                calcRoute();
                $.unblockUI();
            }
        });
    }

    function StartAjax() {
        $.blockUI({ message: "路線計算中 ..." });
    }

    function InitialItemClick() {
        $('#SortedList li').click(function () {
            var str = $(this).attr('id');
            var n = str.split(".");
            var id;
            for (var i = 0; i < gmarkers.length; i++) {
                if (gmarkers[i].gId == n[1]) {
                    id = i;
                }
            }
            google.maps.event.trigger(gmarkers[id], "click");
            gmarkers[id].setVisible(true);
        });
    }

    //var adjustment
    //$("ol.simple_with_animation").sortable({
    //    group: 'simple_with_animation',
    //    pullPlaceholder: false,
    //    // animation on drop
    //    onDrop: function (item, targetContainer, _super) {
    //        var clonedItem = $('<li/>').css({ height: 0 })
    //        item.before(clonedItem)
    //        clonedItem.animate({ 'height': item.height() })

    //        item.animate(clonedItem.position(), function () {
    //            clonedItem.detach()
    //            _super(item)
    //        })
    //        RefreshDirections();
    //    },

    //    // set item relative to cursor position
    //    onDragStart: function ($item, container, _super) {
    //        var offset = $item.offset(),
    //        pointer = container.rootGroup.pointer

    //        adjustment = {
    //            left: pointer.left - offset.left,
    //            top: pointer.top - offset.top
    //        }

    //        _super($item, container)
    //    },
    //    onDrag: function ($item, position) {
    //        $item.css({
    //            left: position.left - adjustment.left,
    //            top: position.top - adjustment.top
    //        })

    //    }
    //});

    function setupLocationMarker(item) {

        var markerIcon;
        switch (item.Pt) {
            case "06": //住宿
                switch (item.IconType) {
                    case "11":
                        markerIcon = hotelIcon11;
                        break;
                    case "12":
                        markerIcon = hotelIcon12;
                        break;
                    case "13":
                        markerIcon = hotelIcon13;
                        break;
                    case "14":
                        markerIcon = hotelIcon14;
                        break;
                }
                //markerIcon = hotelIcon;
                break;
            case "07":
                markerIcon = foodIcon;
                break;
            case "10":
                markerIcon = viewIcon;
                break;
            case "20":
                markerIcon = gasIcon;
                break;
            default:
                break;
        }

        var marker = new google.maps.Marker({
            position: new google.maps.LatLng(item.Lat, item.Lng),
            map: map,
            title: item.Name,
            icon: markerIcon,
            visible: true,
            isChecked: false,
            gIndex: gmarkers.length,
            gId: item.Id
        });
        marker.category = item.Pt;

        gmarkers.push(marker);

        // add a marker click event
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.setContent('<p>' + item.Name + '</p><p>地址：' + item.Address + '</p><p>類型：' + item.Viewtype + '</p><a href="/Map/ViewPointDetails/' + item.Id + ' " target="_blank">點我看詳細內容</a>');
            infowindow.open(map, this);
        });

        google.maps.event.addListener(marker, 'rightclick', function () {
            google.maps.event.trigger(map, 'rightclick', this);
        });
    }

    google.maps.event.addDomListener(window, 'load', initialize);

    // Add a new waypoint at the specified location, and recalculate path.
    function placeMarker(location) {
        console.log(wayppts);
        wayppts.push("point" + waypts.length);
        newLocation = location;
        directionsDisplay.add_marker_(location);
        createDestinationTable();
        newLocation = null;
        calcRoute();
    }

    // Create list of destinations for editing.
    function createDestinationTable() {
        var size = wayppts.length;
        // Use the destinations in the text boxes.
        var locations = new Array();
        for (var x = 0; x < size && !(newLocation != null && x == size - 1) ; x++)
            locations.push(waypts[x].location);

        // Create table of destinations.
        var htmlString = "<table id='tableWaypoints' cellspacing='0' cellpadding='2'>";
        for (var x = 0; x < size; x++) {
            (newLocation != null && x == size - 1) ? loc = newLocation : loc = locations[x];
            htmlString += "<tr id='" + x + "'>";
            htmlString += "<td><b>" + String.fromCharCode(65 + x) + ": </b></td>";
            htmlString += "<td><input type='text' id='point" + x + "' size=30 onchange='calcRoute();' value='" + loc + "'></td>";
            htmlString += "</tr>";
        }
        htmlString += "</table>";
        //document.getElementById("waypointsPanel").innerHTML = htmlString;

        // Since the points were reorded, we need to make the new waypoints array in order.
        wayppts = new Array();
        for (var i = 0; i < size; i++)
            wayppts.push("point" + i)
    }

    // Calculate directions between a set of waypoints.
    function calcRoute() {
        // Remove empty destinations.
        for (var x = 0; x < wayppts.length; x++)
            console.log(wayppts[x]);
        if (wayppts[x] == "") {
            wayppts.splice(x, 1);
            x--;
        }

        createDestinationTable();
        // Get list of addresses from indexing array.
        var all_points = new Array();
        var all_name = new Array();
        for (var x in waypts) {
            all_points.push({
                //location: document.getElementById(waypts[x]).value,
                location: waypts[x].location,
                stopover: true
            });
            all_name.push(waypts[x].Name);
        }
        // Get which method of travel is to be used.
        var selectedMode = "DRIVING"
        // Calculate directions and display results.
        directionsService.route(all_points, all_name, selectedMode, false, false, false, "mi");
    }

    function RefreshDirections() {
        initialize();
    }

    function SortWaypoint() {
        var placeItems = [];

        $("#SortedList").children().each(function () {
            var $this = $(this);
            var str = $this.attr('id');
            if (str != null) {
                var n = str.split(".");
                SortedNumber += n[1];
                SortedNumber += ",";
                for (var i = 0; i < waypts.length; i++) {
                    if (gmarkers[i].gId == n[1]) {
                        placeItems.push(waypts[i]);
                    }
                }
            }
        });

        // 排序過後的 waypts
        waypts = placeItems;
    }

@*    $("#SaveSortedPlaceBtn").click(function () {
        $.ajax({
            type: "POST",
            url: "@Url.Action("PostDirectionHistory", "Map")",
            data: JSON.stringify({ tid: $waypointId, sortedList: SortedNumber }),
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#SortHistory").html(data);
                $("#HistorylListSelectPicker option").last().attr("selected", "selected");
                $('#HistorylListSelectPicker').selectpicker('refresh');
                $.growlUI('路徑已儲存 !');
            }
        });
    });*@

    $(document).on('click', '.dropdown-menu .inner >li', function (e) {
        var $this = $(this).attr("rel");
        var selectedValue = $("#HistorylListSelectPicker option:eq('" + $this + "')");
        var str = selectedValue.attr('value');
        var n = str.split("-");
        selectedList = n[1];
        $.ajax({
            url: "@Url.Action("OnChangeSortList", "Map")",
            type: "POST",
            data: JSON.stringify({ selectedList: selectedList, tid: $waypointId }), //if you need to post Model data, use this
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                $("#SortPlace").html(data);
                RefreshDirections();
            }
        });
    });

    function Reset() {
        gmarkers = [];
        waypts = [];
        SortedNumber = "";
    }
</script>

